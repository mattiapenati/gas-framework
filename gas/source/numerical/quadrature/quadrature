/*
 * Copyright (c) 2009, Politecnico di Milano
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Politecnico di Milano nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*!
 * @file quadrature
 * @brief The quadrature formulae to integrate functions
 */

#ifndef _gas_numerical_quadrature_
#define _gas_numerical_quadrature_

#include "../../gas"
#include "../../geometry/unit/unit"

namespace gas { namespace numerical { namespace quadrature {

/*!
 * @brief A class to retrieve map info
 * @param type_ The formula or the method
 */
template <typename type_>
struct info: public gas::info<type_> {

	/*! @brief The basic shape on which is defined */
	typedef typename type_::unit_t unit_t;

	/*! @brief The dimension of geometry */
	static unsigned int const d = gas::geometry::unit::info<unit_t>::d;
	
	/*! @brief The quadrature formula to use */
	typedef typename type_::method_t method_t;
	
	/*! @brief The number of nodes */
	static unsigned int const n = method_t::n_;
	
	/*! @brief The degree of exactness */
	static unsigned int const degree = method_t::degree_;
	
};

} } }

#include "formula.h"
#include "method.h"

#include "gauss_legendre.h"
#include "newton_cotes.h"

#endif // _gas_numerical_quadrature_
